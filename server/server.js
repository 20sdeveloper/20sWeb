const express = require('express');
const cors = require('cors');
const nodemailer = require('nodemailer');
require('dotenv').config();

const app = express();
const port = process.env.PORT || 5000;

// Middleware
app.use(cors());
app.use(express.json());

// Create a transporter using SMTP with updated configuration
const transporter = nodemailer.createTransport({
  host: 'smtp.gmail.com',
  port: 587,
  secure: false,
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS
  },
  tls: {
    rejectUnauthorized: false,
    ciphers: 'SSLv3'
  },
  pool: true, // Use pooled connections
  maxConnections: 5,
  maxMessages: 100,
  rateDelta: 1000, // Minimum time between messages
  rateLimit: 5, // Max messages per rateDelta
  debug: true,
  logger: true
});

// Verify transporter configuration
transporter.verify(function(error, success) {
  if (error) {
    console.error('SMTP connection error:', error);
  } else {
    console.log('Server is ready to take our messages');
  }
});

// Email templates
const adminContactTemplate = (data) => `
<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color:rgb(0, 0, 0);
            color: #333;
            margin: 0;
            padding: 30px 0;
        }
        .container {
            max-width: 640px;
            margin: 0 auto;
            background: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
            overflow: hidden;
        }
        .header {
            background-color:rgb(220, 223, 225);
            color: #fff;
            padding: 25px 30px;
            text-align: center;
        }
        .header h2 {
            margin: 0;
            font-size: 22px;
        }
        .content {
            padding: 30px;
        }
        .content p {
            margin: 10px 0;
            font-size: 15px;
        }
        .content table {
            width: 100%;
            border-collapse: collapse;
            font-size: 15px;
            margin-top: 15px;
        }
        .content td {
            padding: 10px;
            vertical-align: top;
        }
        .content tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .content strong {
            color: #222831;
        }
        .footer {
            background-color: #f1f1f1;
            text-align: center;
            padding: 20px;
            font-size: 13px;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h2>ðŸ“¨ New Contact Request</h2>
        </div>
        <div class="content">
            <p>Hello Team,</p>
            <p>You have received a new contact request through the website. Below are the details submitted:</p>
            <table>
                <tr>
                    <td><strong>Name:</strong></td>
                    <td>${data.name}</td>
                </tr>
                <tr>
                    <td><strong>Email:</strong></td>
                    <td>${data.email}</td>
                </tr>
                <tr>
                    <td><strong>Phone:</strong></td>
                    <td>${data.phone}</td>
                </tr>
                <tr>
                    <td><strong>Subject:</strong></td>
                    <td>${data.subject}</td>
                </tr>
                ${data.message ? `
                <tr>
                    <td><strong>Message:</strong></td>
                    <td>${data.message}</td>
                </tr>` : ''}
            </table>
            <p>Please respond to the user as soon as you're able to.</p>
            <p>Regards,<br><strong>20s Developers Website</strong></p>
        </div>
        <div class="footer">
            <p>This is an automated message generated by CONTACT US form.</p>
            <p>20s Developers | <a href="mailto:20sdeveloper4209@gmail.com">20sdeveloper4209@gmail.com</a></p>
        </div>
    </div>
</body>
</html>
`;


const userContactTemplate = (data) => `
<!DOCTYPE html>
<html>
<head>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #f8f9fa; padding: 20px; border-radius: 5px; text-align: center; }
        .content { padding: 20px; }
        .footer { text-align: center; padding: 20px; font-size: 12px; color: #666; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h2>Let's Build Something Great Together</h2>
        </div>
        <div class="content">
            <p>Hi ${data.name},</p>
            <p>Thank you for reaching out to <strong>20's Developers</strong>!</p>
            <p>Tell us a bit about your project, and our team will get back to you within 24 hours with a custom solution.</p>
            <p>Looking forward to working with you!</p>
            <p>âœ‰ <a href="mailto:20sdeveloper4209@gmail.com">20sdeveloper4209@gmail.com</a></p>
        </div>
        <div class="footer">
            <p>This is an automated response. Please do not reply to this email.</p>
        </div>
    </div>
</body>
</html>

`;

const adminConsultationTemplate = (data) => `
<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f4f6f8;
            color: #333;
            margin: 0;
            padding: 30px 0;
        }
        .container {
            max-width: 620px;
            margin: 0 auto;
            background: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
            overflow: hidden;
        }
        .header {
            background-color:rgb(45, 86, 147);
            color: #fff;
            padding: 25px 30px;
            text-align: center;
        }
        .header h2 {
            margin: 0;
            font-size: 22px;
        }
        .content {
            padding: 30px;
        }
        .content p {
            margin: 10px 0;
            font-size: 15px;
        }
        .content strong {
            display: inline-block;
            width: 100px;
        }
        .footer {
            background-color:rgb(45, 86, 147);
            text-align: center;
            padding: 20px;
            font-size: 16px;
            color:white;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h2>ðŸ“¥ New Consultation Request Received</h2>
        </div>
        <div class="content">
            <p>Hello Team,</p>
            <p>You've received a new consultation request via the 20s Developers website. Below are the details shared by the user:</p>
            <p><strong>Name:</strong> ${data.name}</p>
            <p><strong>Email:</strong> ${data.email}</p>
            <p><strong>Phone:</strong> ${data.phone}</p>
            <p><strong>Subject:</strong> ${data.subject}</p>
            <p>Please get in touch with the user as soon as possible to continue the conversation.</p>
            <p>Regards,<br><strong>20s Developers Website</strong></p>
        </div>
        <div class="footer">
            <p>This is an automated message triggered by a CONSULTATION form submission.</p>
        </div>
    </div>
</body>
</html>
`;

const userConsultationTemplate = (data) => `
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title>20s Developers Email</title>
</head>
<body style="font-family: Arial, sans-serif; background-color: #f4f4f4; margin: 0; padding: 0;">
  <div style="max-width: 600px; margin: auto; background: #ffffff; border-radius: 8px; overflow: hidden;">
    
    <!-- Header with Logo -->
    <div style="background-color: #0c3c78; padding: 30px 20px; text-align: center; color: white;">
    <img src="logo.png" alt="20s Developers Logo" style="width: 100px; height: 100px;">
    </div>

    <!-- Body Content -->
    <div style="padding: 30px 20px; color: #333;">
      <p style="margin: 0 0 10px;">Hi <strong>${data.name}</strong>,</p>
      <p style="margin: 10px 0;">Thank you for reaching out to <strong>20's Developers</strong>!</p>
      <p style="margin: 10px 0;">Tell us a bit about your project, and our team will get back to you within 24 hours with a custom solution.</p>
      <p style="margin: 10px 0;">Looking forward to working with you!</p>
      <p style="margin: 10px 0;">âœ‰ <a href="mailto:20sdeveloper4209@gmail.com" style="color: #0c3c78;">20sdeveloper4209@gmail.com</a></p>
    </div>

    <!-- Social Media Icons -->
    <div style="text-align: center; padding: 10px 20px;">
      <a href="https://www.linkedin.com/company/20s-developers/posts/?feedView=all" target="_blank" style="margin: 0 8px;">
        <img src="https://cdn-icons-png.flaticon.com/512/145/145807.png" alt="LinkedIn" style="width: 24px; height: 24px;">
      </a>
      <a href="https://www.facebook.com/people/20s-Developers/61567067697272/" target="_blank" style="margin: 0 8px;">
        <img src="https://cdn-icons-png.flaticon.com/512/145/145802.png" alt="Facebook" style="width: 24px; height: 24px;">
      </a>
      <a href="https://twitter.com/20sDevelopers" target="_blank" style="margin: 0 8px;">
        <img src="https://cdn-icons-png.flaticon.com/512/5968/5968958.png" alt="X (Twitter)" style="width: 24px; height: 24px;">
      </a>
      <a href="https://www.instagram.com/p/DKrYi1_In2G/?utm_source=ig_web_copy_link&igsh=MXc1NWlpMXp4Mjlpcw==" target="_blank" style="margin: 0 8px;">
        <img src="https://cdn-icons-png.flaticon.com/512/174/174855.png" alt="Instagram" style="width: 24px; height: 24px;">
      </a>
      <a href="https://www.google.com/search?q=20s+developers&oq=20s+de&gs_lcrp=EgZjaHJvbWUqBggAEEUYOzIGCAAQRRg7MgYIARBFGDkyBggCEEUYOzIGCAMQRRg8MgYIBBBFGDwyBggFEEUYPNIBCDUxNDFqMGo3qAIAsAIA&sourceid=chrome&ie=UTF-8" target="_blank" style="margin: 0 8px;">
        <img src="https://cdn-icons-png.flaticon.com/512/300/300221.png" alt="Google" style="width: 24px; height: 24px;">
      </a>
    </div>

    <!-- Footer -->
    <div style="background-color: #f1f1f1; text-align: center; padding: 20px; font-size: 12px; color: #777;">
      <p style="margin: 0;">This is an automated response. Please do not reply to this email.</p>
    </div>
    
  </div>
</body>
</html>
`;

// Update the email sending functions to use rate limiting and add DKIM headers
const sendEmails = async (mailOptions) => {
  try {
    const info = await transporter.sendMail({
      ...mailOptions,
      headers: {
        'X-Priority': '1',
        'X-MSMail-Priority': 'High',
        'Importance': 'high',
        'X-Mailer': '20s Developers Website',
        'List-Unsubscribe': `<mailto:${process.env.EMAIL_USER}?subject=unsubscribe>`,
        'Precedence': 'bulk'
      }
    });
    console.log('Email sent successfully:', info.messageId);
    return info;
  } catch (error) {
    console.error('Error sending email:', error);
    throw new Error(`Failed to send email: ${error.message}`);
  }
};

// Contact form endpoint
app.post('/api/contact', async (req, res) => {
  const { name, email, phone, subject, message } = req.body;

  try {
    // Send email to admin
    const adminMailOptions = {
      from: {
        name: '20s Developers',
        address: process.env.EMAIL_USER
      },
      to: process.env.EMAIL_USER,
      subject: `New Contact Form Submission: ${subject}`,
      html: adminContactTemplate({ name, email, phone, subject, message }),
      text: `New Contact Form Submission\n\nName: ${name}\nEmail: ${email}\nPhone: ${phone}\nSubject: ${subject}\nMessage: ${message || 'No message provided'}`
    };

    // Send auto-reply to user
    const userMailOptions = {
      from: {
        name: '20s Developers',
        address: process.env.EMAIL_USER
      },
      to: email,
      subject: 'Thank You for Contacting 20s Developers',
      html: userContactTemplate({ name, email, phone, subject, message }),
      text: `Hi ${name},\n\nThank you for reaching out to 20's Developers!\n\nTell us a bit about your project, and our team will get back to you within 24 hours with a custom solution.\n\nLooking forward to working with you!\n\nBest regards,\n20s Developers Team`
    };

    try {
      await Promise.all([
        sendEmails(adminMailOptions),
        sendEmails(userMailOptions)
      ]);
      res.status(200).json({ message: 'Email sent successfully' });
    } catch (emailError) {
      console.error('Error sending emails:', emailError);
      throw new Error(`Failed to send emails: ${emailError.message}`);
    }
  } catch (error) {
    console.error('Error in contact form:', error);
    res.status(500).json({ 
      message: 'Failed to process contact form',
      error: error.message
    });
  }
});

// Consultation form endpoint
app.post('/api/consultation', async (req, res) => {
  const { name, email, phone, subject } = req.body;

  try {
    // Send email to admin
    const adminMailOptions = {
      from: {
        name: '20s Developers',
        address: process.env.EMAIL_USER
      },
      to: process.env.EMAIL_USER,
      subject: `New Consultation Request: ${subject}`,
      html: adminConsultationTemplate({ name, email, phone, subject }),
      text: `New Consultation Request\n\nName: ${name}\nEmail: ${email}\nPhone: ${phone}\nSubject: ${subject}`
    };

    // Send auto-reply to user
    const userMailOptions = {
      from: {
        name: '20s Developers',
        address: process.env.EMAIL_USER
      },
      to: email,
      subject: 'Thank You for Your Consultation Request - 20s Developers',
      html: userConsultationTemplate({ name, email, phone, subject }),
      text: `Hi ${name},\n\nThank you for your consultation request with 20's Developers!\n\nOur team will review your request and get back to you within 24 hours with a custom solution.\n\nLooking forward to working with you!\n\nBest regards,\n20s Developers Team`
    };

    try {
      await Promise.all([
        sendEmails(adminMailOptions),
        sendEmails(userMailOptions)
      ]);
      res.status(200).json({ message: 'Email sent successfully' });
    } catch (emailError) {
      console.error('Error sending emails:', emailError);
      throw new Error(`Failed to send emails: ${emailError.message}`);
    }
  } catch (error) {
    console.error('Error in consultation form:', error);
    res.status(500).json({ 
      message: 'Failed to process consultation form',
      error: error.message
    });
  }
});

// Newsletter subscription endpoint
app.post('/api/newsletter', async (req, res) => {
  const { email } = req.body;

  try {
    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: process.env.EMAIL_USER,
      subject: 'New Newsletter Subscription',
      html: `
        <h3>New Newsletter Subscription</h3>
        <p><strong>Email:</strong> ${email}</p>
      `
    };

    try {
      await transporter.sendMail(mailOptions);
      res.status(200).json({ message: 'Newsletter subscription successful' });
    } catch (emailError) {
      console.error('Error sending newsletter email:', emailError);
      throw new Error(`Failed to send newsletter email: ${emailError.message}`);
    }
  } catch (error) {
    console.error('Error in newsletter subscription:', error);
    res.status(500).json({ 
      message: 'Failed to process newsletter subscription',
      error: error.message
    });
  }
});

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
}); 